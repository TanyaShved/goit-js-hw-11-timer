{"version":3,"sources":["webpack:///./index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","constructor","targetDate","this","init","setInterval","currentTime","Date","now","deltatime","getTimeComponents","pad","value","String","padStart","time","textContent","updateClockface","Math","floor","selector"],"mappings":"kHAAA,iBAEA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAiCR,IA9BvB,MACEI,aAAY,WAAEC,GAAe,IAC3BC,KAAKD,WAAaA,EAClBC,KAAKC,OAGPA,OACEC,YAAY,KACV,MAAMC,EAAcC,KAAKC,MACnBC,EAAYN,KAAKD,WAAaI,EACpCH,KAAKO,kBAAkBD,IACtB,KAGLE,IAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAGnCJ,kBAAkBK,GAQhB,OASJ,SAAyBpB,EAAMG,EAAOC,EAAMC,GAC1CN,EAAKC,KAAKqB,YAAe,GAAErB,EAC3BD,EAAKI,MAAMkB,YAAe,GAAElB,EAC5BJ,EAAKK,KAAKiB,YAAe,GAAEjB,EAC3BL,EAAKM,KAAKgB,YAAe,GAAEhB,EAblBiB,CAPMC,KAAKC,MAAMJ,EAAO,OACjBZ,KAAKQ,IACjBO,KAAKC,MAAOJ,EAAO,MAAR,OAEAZ,KAAKQ,IAAIO,KAAKC,MAAOJ,EAAO,KAAR,MACpBZ,KAAKQ,IAAIO,KAAKC,MAAOJ,EAAO,IAAe,SAMlB,CACxCK,SAAU,WACVlB,WAAY,IAAIK,KAAK,oB","file":"main.72031a664edc0aa88b5c.js","sourcesContent":["import './styles.css';\n\nconst refs = {\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n};\n\nclass CountdownTimer {\n  constructor({ targetDate } = {}) {\n    this.targetDate = targetDate;\n    this.init();\n  }\n\n  init() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltatime = this.targetDate - currentTime;\n      this.getTimeComponents(deltatime);\n    }, 1000);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  getTimeComponents(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return updateClockface(days, hours, mins, secs);\n  }\n}\n\nconst countdownTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Nov 17, 2020'),\n});\n\nfunction updateClockface(days, hours, mins, secs) {\n  refs.days.textContent = `${days}`;\n  refs.hours.textContent = `${hours}`;\n  refs.mins.textContent = `${mins}`;\n  refs.secs.textContent = `${secs}`;\n}\n"],"sourceRoot":""}